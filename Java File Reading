/* for printing header file with serial numbers
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.FileNotFoundException;

public class Main {
    public static void main(String[] args) {

        try {
            FileReader fileReader = new FileReader("F:\\Users\\as\\Documents\\EVE01Sales.txt");
            BufferedReader reader = new BufferedReader(fileReader);

            String line = reader.readLine();
            String[] fields = line.split("\t");


            for(int i =0; i < fields.length; i++){
                System.out.println((i+1) + "." + fields[i]);
            }

            reader.close();

        }
        catch(FileNotFoundException e){
            System.out.println("Error: The file could not be opened.");
        }
        catch(IOException e){
           System.out.println("Error reading the file");
        }
    }
} */\

//----------------------------------------------------------------------------------------------------------------------
//How to keep on reading one line from the opened file and print each line. When all line are read, prints the message "END OF THE FILE HAS REACHED"


/*import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.FileNotFoundException;

public class Main{
    public static void main(String[] args){

      try {
          FileReader fileReader = new FileReader("F:\\Users\\as\\Documents\\EVE01Sales.txt");
          BufferedReader reader = new BufferedReader(fileReader);

          String line = reader.readLine();
          String[] fields = line.split("\t");

          while ((line = reader.readLine()) != null) {
              System.out.println(line);
          }

          System.out.println("End of File has reached");

      }
      catch(FileNotFoundException e) {
          System.out.println("Error: File could not be opened");
      }
      catch(IOException e){
          System.out.println("Error Reading The File.");
      }

    }
} */

//-------------------------------------------------------------------------------------------------------------
/*Suppose that each split line contains following SIX  fields

    ItemCode    ItemDescription    UnitPrice        Quantity         Date        SalesPersonID

Write code that prints the amount that the buyer has to pay for the item described in the line*/

/*import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.ArrayList;
import java.util.Map;
import java.util.List;

public class Main{
    public static void main(String[] args){

        Map<String, Integer> amountbyItemCode = new HashMap<>();

        try {
            BufferedReader reader = new BufferedReader(new FileReader("F:\\Users\\as\\Documents\\EVE01Sales.txt"));
            String line;

            line = reader.readLine();

            while ((line = reader.readLine()) != null) {
                String[] fields = line.split("\t");

                String itemCode = fields[2];
                int Quantity = Integer.parseInt(fields[4]);
                int UnitPrice = Integer.parseInt(fields[5]);

                int amount = Quantity * UnitPrice;

                if (amountbyItemCode.containsKey(itemCode)) {    //if our obj has the specified key
                    int currentTotal = amountbyItemCode.get(itemCode);  //show a current total in which obj gets the key
                    int newTotal = currentTotal + amount; //show a new total and add the amount into current total
                     amountbyItemCode.put(itemCode, currentTotal);
                    }
                else{
                    amountbyItemCode.put(itemCode, amount);
                }
            }
                 reader.close();

            List<Map.Entry<String, Integer>> entries = new ArrayList<>(amountbyItemCode.entrySet());

            for(int i = 0 ; i <entries.size(); i++){
                Map.Entry<String, Integer> entry = entries.get(i);
                System.out.println("Amount to be paid for item: " +entry.getKey() + "is: " + entry.getValue());
            }

        }

        catch(IOException e){
            System.out.println("Error while reading file");
        }

    }
} */

//------------------------------------------------------------------------------------------------------------
//Write java code to display month wise sales

/*import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;


public class Main {
    public static void main(String[] args){

      HashMap<String, Integer> monthSales = new HashMap<>();

      try{
          BufferedReader reader = new BufferedReader(new FileReader("F:\\Users\\as\\Documents\\EVE01Sales.txt"));

          String line;
          reader.readLine();

          while((line = reader.readLine())!=null){
              String[] fields = line.split("\t");

              String date = fields[0];

              int Quantity = Integer.parseInt(fields[4]);
              int UnitPrice = Integer.parseInt(fields[5]);

              int amount = Quantity*UnitPrice;

              String months = date.split("-")[1];

              Integer oldSales = monthSales.get(months);

              if(oldSales == null){
                  monthSales.put(months, amount);

              }
              else{
                  monthSales.put(months, oldSales+amount);
              }

          }

          reader.close();
          System.out.print("Month Wise Sales: ");

          Object[] months = monthSales.keySet().toArray();

          for(int i = 0; i< months.length; i++){
              String month = (String) months[i];

              Integer sales = monthSales.get(month);
              System.out.println(month + "=> " + sales);
      }

      }
      catch (IOException e){
          System.out.println("Error reading file");
      }
    }
} */

//-------------------------------------------------------------------------------------------------------------------
//Write java code that prints all the record sorted in descending order with respect to sales amount (compare for orders)
/*import java.io.BufferedReader;
import java.io.FileReader;             //usual import statements and the one for utilities
import java.io.IOException;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        List<String[]> records = new ArrayList<>(); //here in a list we have only 1 value so "Strings[]" with object
                                                     // records

        try {
            BufferedReader reader = new BufferedReader(new FileReader("EVE01Sales.txt"));
            String line;                                  //usual stuff
            reader.readLine();

            while ((line = reader.readLine()) != null) {
                String[] fields = line.split("\t");

                records.add(fields);   //in our records we'll add all the fields of the file
            }
            reader.close();   //close it
            records.sort((a, b) -> { //for sorting we use .sort and put a and b as strings
                int qtyA = Integer.parseInt(a[4]);  //and then calculate amount for each
                int uPriceA = Integer.parseInt(a[5]);
                int amount1 = qtyA * uPriceA;

                int qtyB = Integer.parseInt(b[4]);
                int uPriceB = Integer.parseInt(b[5]);
                int amount2 = qtyB * uPriceB;

                return Integer.compare(amount2, amount1);  //for descending, .compare principle
            });
            System.out.println(reader); //print the header

            for (int i = 0; i < records.size(); i++) {  //iteration for our records
                String[] record = records.get(i);

                System.out.println(String.join("\t", record));  //.join to join the tab of fields and our records
            }

        } catch (IOException e) {   //catch block
            System.out.println("Error reading the file.");
        }
    }
} */

//------------------------------
import java.io.*;
import java.util.*;

public class Sales {
    public static void main(String[] args) {
        Map<String, Integer> prodWise = new HashMap<>();

        try {
            File file = new File("C:\\Users\\java\\temp\\EVE01Sales.txt");
            Scanner sc = new Scanner(file);

            HashMap<String, Integer> prod = new HashMap<>();

            String line = sc.nextLine();
            while(sc.hasNext()){
                line = sc.nextLine();

                String[] arr  = line.split("\t");

                if(!prod.containsKey(arr[5])){
                    prod.put(arr[5] , value);
                }


                int sum = Integer.parseInt(arr[5]) * Integer.parseInt(arr[3]);

                prod.put(arr[5], (prod.get(arr[5] + sum)));

            }

            for(String pr : prod.keySet()){
                System.out.println(p + " : " + prod.get(pr));
            }

        } catch (IOException e) {
            System.out.println(e.printStackTrace());
        }
    }
}

//----------------------------------------------------------------------------------------------------------

import java.io.*;
import java.util.*;

public class RegionAndProduct {

    public static void main(String[] args) {
        try {
            File file = new File("C:\\temp\\EVE01Sales.txt");
            Scanner sc = new Scanner(file);

            HashMap<String, Integer> regionName = new HashMap<>();
            HashMap<String, Integer> prod = new HashMap<>();

            processSalesData(sc, regionName, prod);

            System.out.println("Region-Wise Sales:\n");
            printSales(regionName);

            System.out.println("\nProduct-Wise Sales:\n");
            printSales(prod);

        } catch (IOException e) {
            System.out.println("Error reading file");
        }
    }

    // Function to read and handle file data
    public static void processSalesData(Scanner sc, HashMap<String, Integer> regionName, HashMap<String, Integer> prod) {
        if (sc.hasNextLine()) sc.nextLine(); // skip header

        while (sc.hasNextLine()) {
            String line = sc.nextLine().trim();
            String[] fields = line.split("\t");

            String region = fields[1];
            String productName = fields[3];
            int qty = Integer.parseInt(fields[4]);
            int uPrice = Integer.parseInt(fields[5]);
            int amount = qty * uPrice;

            // Use your loop-style logic via generalized function
            updateSales(regionName, region, amount);
            updateSales(prod, productName, amount);
        }
    }

    // ✅ Generalized function using your loop-style logic
    public static void updateSales(HashMap<String, Integer> map, String key, int amount) {
        while (!map.containsKey(key)) {
            map.put(key, 0);
        }
        map.put(key, map.get(key) + amount);
    }

    // Printing function
    public static void printSales(HashMap<String, Integer> map) {
        for (String key : map.keySet()) {
            System.out.println(key + " : " + map.get(key));
        }
    }
}
